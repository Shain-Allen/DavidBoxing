class PlayerController : ZilchComponent
{
  var Gamepad : Gamepad = null;
  var MyLastFramePosition : Real3 = Real3(0,0,0);
  var MyVelocity : Real3 = Real3(0,0,0);
  
  function Initialize(init : CogInitializer)
  {
    Zero.Connect(this.Space, Events.LogicUpdate, this.OnLogicUpdate);
    Zero.Connect(Zero.Keyboard, Events.KeyDown, this.OnKeyDown);
    this.Gamepad = Zero.Gamepads.GetGamePad(0);
  }

  function OnKeyDown(event : KeyboardEvent)
  {
    
  }

  function OnLogicUpdate(event : UpdateEvent)
  {
    while(this.Owner.Transform.EulerAngles.Z > Math.Pi * 2)
      this.Owner.Transform.EulerAngles += Real3(0,0,-(Math.Pi * 2));
    while(this.Owner.Transform.EulerAngles.Z < -(Math.Pi * 2))
      this.Owner.Transform.EulerAngles += Real3(0,0,Math.Pi * 2);
      
    //Console.WriteLine(this.Owner.Transform.EulerAngles.Z);
    //Console.WriteLine(this.Owner.Transform.Translation - this.MyLastFramePosition);
    var target = this.Gamepad.LeftStick * 10;
    var targetVelocity = Real2(target - this.Owner.Transform.Translation.XY) * 5;
    this.Owner.RigidBody.Velocity = Real3(targetVelocity,0);
    //this.Owner.Transform.Translation = Math.Lerp(this.Owner.Transform.Translation, Real3(this.Gamepad.LeftStick * 10,0), 0.05);
    
    
    var currentDirection = -Math.ATan2(this.Owner.RigidBody.Velocity.X, this.Owner.RigidBody.Velocity.Y);
    var currentVector = Math.Normalize(Real2(Math.Cos(currentDirection),Math.Sin(currentDirection)));
    var desiredVector = Math.Normalize(Real2(Math.Cos(this.Gamepad.LeftStick.X),Math.Sin(this.Gamepad.LeftStick.Y)));
    currentVector = Math.Lerp(currentVector,desiredVector,0.001);
    currentVector.Y *= 10;
    Console.WriteLine(Math.ATan2(currentVector.Y, currentVector.X) * 360);
    
    this.Owner.Transform.EulerAngles = Real3(0,0,Math.ATan2(currentVector.Y, currentVector.X));
    Console.WriteLine(currentVector);
    Console.WriteLine(desiredVector);
    
    
    //Console.WriteLine(currentDirection);
    //Console.WriteLine(this.MyVelocity);
    //this.Owner.Transform.SetEulerAnglesXYZ(0,0,Math.Lerp(this.Owner.Transform.EulerAngles.Z, currentDirection + Math.Pi/2, 0.05));
    //this.MyVelocity = this.Owner.Transform.Translation - this.MyLastFramePosition;
    //this.MyLastFramePosition = this.Owner.Transform.Translation;
    /*
    var stickspeed = this.Gamepad.RightStickDelta.X * this.Gamepad.RightStickDelta.X + this.Gamepad.RightStickDelta.Y * this.Gamepad.RightStickDelta.Y;
    
    if(stickspeed > 0.5)
    {
      this.Owner.RigidBody.Velocity =+ Real3(this.Gamepad.RightStickDelta * 10,0);
      Console.WriteLine(stickspeed);
    }
    */
  }
}
