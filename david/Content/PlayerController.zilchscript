class PlayerController : ZilchComponent
{
  var Gamepad : Gamepad = null;
  //true = left false = right
  [Property]
  var LeftRight : Boolean = true;
  var DoMov : Boolean = true;
  var Timer : Real = 0;
  
  function Initialize(init : CogInitializer)
  {
    Zero.Connect(this.Space, Events.LogicUpdate, this.OnLogicUpdate);
    Zero.Connect(this.Owner, Events.CollisionPersisted, this.OnCollisionPersisted);
    Zero.Connect(this.Owner, Events.CollisionEnded, this.OnCollisionEnded);
    Zero.Connect(this.Owner, Events.CollisionStarted, this.OnCollisionStarted);
    this.Gamepad = Zero.Gamepads.GetGamePad(0);
  }

  function OnCollisionStarted(event : CollisionEvent)
  {
    this.DoMov = false;
  }

  function OnCollisionEnded(event : CollisionEvent)
  {
    this.DoMov = true;
    Console.WriteLine("done");
  }

  function OnCollisionPersisted(event : CollisionEvent)
  {
    Console.WriteLine(this.Timer);
  }

  function OnLogicUpdate(event : UpdateEvent)
  {
    var stick = Real2(0,0);
    
    if(this.LeftRight == true)
    {
      stick = this.Gamepad.LeftStick;
    }
    else
    {
      stick = this.Gamepad.RightStick;
    }
    
    //movement handling
    var currentPos = this.Owner.Transform.Translation;
    stick.X += this.LeftRight as Integer * -2 + 1;
    var desiredPos = Real3(stick, 0) * 10;
    var currentVel = 5 * (desiredPos - currentPos);   
    if(this.DoMov) this.Owner.RigidBody.Velocity = currentVel;    
    
    
    
    
    //rotation handling 1
    var currentAngle = this.Owner.Transform.EulerAngles.Z;
    var currentDirVec = Real2(Math.Cos(currentAngle), Math.Sin(currentAngle));
    var desiredDirVec = Math.Normalize(currentVel).XY;
    currentDirVec = Math.Lerp(currentDirVec,desiredDirVec, 0.2);
    currentAngle = Math.ATan2(currentDirVec.Y, currentDirVec.X);
    //this.Owner.Transform.SetEulerAnglesXYZ(0,0,currentAngle);
    this.Timer += event.Dt;
    
    
    //rotation handling 2
    if(this.FixAngle(
  }
  
  function FixAngle(angle : Real) : Real
  {
    return(Math.ATan2(Math.Cos(angle), Math.Sin(angle)));
  }
    
}
